service: ts-sqs-cognito-paramstore

custom:
  secretBaker:
    DB: /${opt:stage, 'dev'}/common/db

provider:
  name: aws
  runtime: nodejs16.x
  environment:
    user_pool_id: { Ref: UserPool }
    client_id: { Ref: UserClient }
    account_id: { Ref: AWS::AccountId }
    queue: CicleQueue
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
            - sqs:SendMessage
            - kms:Decrypt
          Resource: "*"

functions:
  loginUser:
    handler: dist/handlers/login.handler
    events:
      - http:
          path: user/login
          method: post
          cors: true

  signupUser:
    handler: dist/handlers/signup.handler
    events:
      - http:
          path: user/signup
          method: post
          cors: true

  privateAPI:
    handler: dist/handlers/private.handler
    events:
      - http:
          path: user/private
          method: post
          cors: true
          authorizer:
            name: PrivateAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - UserPool
                - Arn
            claims:
              - email

  listener:
    handler: dist/handlers/event.listener
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - CicleQueue
              - Arn
          batchSize: 1

  trigger:
    handler: dist/handlers/event.trigger
    events:
      - http:
          path: user/event-trigger
          method: post
          cors: true
          authorizer:
            name: PrivateAuthorizer
            type: COGNITO_USER_POOLS
            arn:
              Fn::GetAtt:
                - UserPool
                - Arn
            claims:
              - email

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: serverless-auth-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 6
        AutoVerifiedAttributes: ["email"]

    UserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: user-pool-ui
        GenerateSecret: false
        UserPoolId: { Ref: UserPool }
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - "ADMIN_NO_SRP_AUTH"

    CicleQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "CicleQueue"

plugins:
  - serverless-secret-baker